#!/bin/bash
# fvwm-menu-mpd
# by greatant
# https://github.com/greatant/fvwm-pipemenus/
#
# Requires: mpd, mpc
#====================================================

# Icons from your ImagePath
PLAYICON="media/media-playback-start-6.png"
PAUSEICON="media/media-playback-pause-6.png"
NEXTICON="media/media-seek-forward-6.png"
PREVICON="media/media-seek-backward-6.png"
STOPICON="media/media-playback-stop-6.png"

LISTICON="media/format-justify-left-5.png"
OUTICON="media/audio-card-2.png"
VOLICON="media/audio-volume-high-3.png"
TOGICON="media/preferences-desktop-2.png"

RANDICON="media/media-playlist-shuffle-2.png"
REPICON="media/media-playlist-repeat-2.png"
SINGICON="media/single.png"
CONSICON="media/consume.png"
CROSSICON="media/draw-triangle.png"
GAINICON="media/office-chart-line-stacked2.png"

LOADICON="media/list-add-4.png"
UPDICON="media/view-refresh-5.png"
KILLICON="media/dialog-close.png"

TICKICON="media/tick.png"

main() {

MAIN=$(mpc)

#if [ ${MAIN}=="error: Connection refused" ]; then
if [ "${MAIN}" == "error: Connection refused" ]; then
	echo "DestroyMenu recreate FvwmMenuMPD"
	echo "AddToMenu FvwmMenuMPD \"MPD not available.\" Nop"
#	echo "AddToMenu FvwmMenuMPD \"MPD not available.\" Exec exec mpd"
	exit
fi

PLAPAU=$(echo ${MAIN} | grep -o "\[playing\]" -c)
VOLUME=$(echo ${MAIN} | grep -o "volume:...")
OUTPUT=$(mpc outputs | grep "" -c)

# MissingSubmenuFunction
echo "DestroyFunc FuncFvwmMenuMPD"
echo "AddToFunc FuncFvwmMenuMPD I Piperead '${0} \$0'"

echo "DestroyMenu recreate FvwmMenuMPD"
echo "AddToMenu FvwmMenuMPD MissingSubmenuFunction FuncFvwmMenuMPD"
echo "+ \"Playlist%${LISTICON}%\" Popup FvwmMenuMPDplaylist"
echo "+ \"\" Nop"

if [ ${PLAPAU} -eq 1 ]; then
	echo "+ \"Pause%${PAUSEICON}%\" Exec exec mpc toggle"
    else
	echo "+ \"Play%${PLAYICON}%\" Exec exec mpc toggle"
fi

echo "+ \"Next%${NEXTICON}%\" Exec exec mpc next"
echo "+ \"Previous%${PREVICON}%\" Exec exec mpc prev"
echo "+ \"Stop%${STOPICON}%\" Exec exec mpc stop"
echo "+ \"\" Nop"

if [ ${OUTPUT} -gt 0 ]; then
	echo "+ \"Outputs%${OUTICON}%\" Popup FvwmMenuMPDoutput"
fi

if [ ${VOLUME#volume:} -gt 0 ]; then
	echo "+ \"Volume:${VOLUME#volume:}%%%${VOLICON}%\" Popup FvwmMenuMPDvolume"
    else
	if [ ${VOLUME#volume:}=="0" ]; then
		echo "+ \"Volume [mute]%${VOLICON}%\" Popup FvwmMenuMPDvolume"
	fi
fi

echo "+ \"Toggle%${TOGICON}%\" Popup FvwmMenuMPDtoggle"

echo "+ \"\" Nop"
echo "+ \"Load%${LOADICON}%\" Popup FvwmMenuMPDload"
echo "+ \"Update DB%${UPDICON}%\" Exec exec mpc update"
echo "+ \"Kill MPD%${KILLICON}%\" Exec exec killall mpd"

echo "DestroyMenu FvwmMenuMPDreplay"
echo "AddToMenu FvwmMenuMPDreplay \"off\" Exec exec mpc replaygain off"
echo "+ \"track\" Exec exec mpc replaygain track"
echo "+ \"album\" Exec exec mpc replaygain album"

VOLUMEVAR=(5 10 20 30 40 50 60 70 80 90 100)
echo "DestroyMenu FvwmMenuMPDvolume"
echo "AddToMenu FvwmMenuMPDvolume \"mute\" Exec exec mpc volume 0"
for i in ${VOLUMEVAR[@]}; do
	echo "+ \"$i%%\" Exec exec mpc volume $i"; done

CROSSVAR=(5 6 7 8 9 10)
echo "DestroyMenu FvwmMenuMPDcrossfade"
echo "AddToMenu FvwmMenuMPDcrossfade \"off\" Exec exec mpc crossfade 0"
for i in ${CROSSVAR[@]}; do
	echo "+ \"$i\" Exec exec mpc crossfade $i"; done

}

toggle() {

TOGVAR=$(mpc)
RAND=$(echo ${TOGVAR} | grep -o "random: on" -c)
REPEAT=$(echo ${TOGVAR} | grep -o "repeat: on" -c)
SINGLE=$(echo ${TOGVAR} | grep -o "single: on" -c)
CONSUME=$(echo ${TOGVAR} | grep -o "consume: on" -c)
CROSS=$(mpc crossfade | awk '/[1-9]/ {print $2} / 0/ {print "off"}')
REPLAY=$(mpc replaygain | cut -d " " -f2)

echo "DestroyMenu recreate FvwmMenuMPDtoggle"
echo "AddToMenu FvwmMenuMPDtoggle DynamicPopDownAction DestroyMenu FvwmMenuMPDtoggle"

if [ ${RAND} -eq 1 ]; then
	echo "+ \"%${RANDICON}%Random%${TICKICON}%\" Exec exec mpc random"
    else
	echo "+ \"%${RANDICON}%Random\" Exec exec mpc random"
fi
if [ ${REPEAT} -eq 1 ]; then
	echo "+ \"%${REPICON}%Repeat%${TICKICON}%\" Exec exec mpc repeat"
    else
	echo "+ \"%${REPICON}%Repeat\" Exec exec mpc repeat"
fi
if [ ${SINGLE} -eq 1 ]; then
	echo "+ \"%${SINGICON}%Single%${TICKICON}%\" Exec exec mpc single"
    else
	echo "+ \"%${SINGICON}%Single\" Exec exec mpc single"
fi
if [ ${CONSUME} -eq 1 ]; then
	echo "+ \"%${CONSICON}%Consume%${TICKICON}%\" Exec exec mpc consume"
    else
	echo "+ \"%${CONSICON}%Consume\" Exec exec mpc consume"
fi

echo "+ \"Crossfade [${CROSS}]%${CROSSICON}%\" Popup FvwmMenuMPDcrossfade"
echo "+ \"ReplayGain [${REPLAY}]%${GAINICON}%\" Popup FvwmMenuMPDreplay"

}

playlist() {

echo "DestroyMenu recreate FvwmMenuMPDplaylist"
echo "AddToMenu FvwmMenuMPDplaylist DynamicPopDownAction DestroyMenu FvwmMenuMPDplaylist"
echo "+ \"Clear\" Exec exec mpc clear"
echo "+ \"\" Nop"
mpc playlist | awk '{print "+ \""$RS"\" Exec exec mpc play "$NR}'

}

output() {

echo "DestroyMenu recreate FvwmMenuMPDoutput"
echo "AddToMenu FvwmMenuMPDoutput DynamicPopDownAction DestroyMenu FvwmMenuMPDoutput"
mpc outputs | awk '/enabled/ {print "+ \""$3"%media/tick.png%\" Exec mpc disable "$2} \
			/disabled/ {print "+ \""$3"\" Exec mpc enable "$2}'

}

load() {

echo "DestroyMenu recreate FvwmMenuMPDload"
echo "AddToMenu FvwmMenuMPDload DynamicPopDownAction DestroyMenu FvwmMenuMPDload"
mpc lsplaylists | awk '{print "+ \""$RS"\" Exec exec mpc load \""$RS"\""}'

}



case "${1}" in
    FvwmMenuMPDload) load;;
    FvwmMenuMPDoutput) output;;
    FvwmMenuMPDplaylist) playlist;;
    FvwmMenuMPDtoggle) toggle;;
    "") main;;
esac
