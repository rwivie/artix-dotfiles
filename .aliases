# Pacman alias examples
alias pacupg='sudo pacman -Syu'		# Synchronize with repositories and then upgrade packages that are out of date on the local system.
alias pacdl='pacman -Sw'		# Download specified package(s) as .tar.xz ball
alias pacin='sudo pacman -S'		# Install specific package(s) from the repositories
alias pacins='sudo pacman -U'		# Install specific package not from the repositories but from a file 
alias pacre='sudo pacman -R'		# Remove the specified package(s), retaining its configuration(s) and required dependencies
alias pacrem='sudo pacman -Rns'		# Remove the specified package(s), its configuration(s) and unneeded dependencies
alias pacrep='pacman -Si'		# Display information about a given package in the repositories
alias pacreps='pacman -Ss'		# Search for package(s) in the repositories
alias pacloc='pacman -Qi'		# Display information about a given package in the local database including optional deps
alias paclocs='pacman -Qs'		# Search for package(s) in the local database
alias paclo="pacman -Qdt"		# List all packages which are orphaned
alias pacc="sudo pacman -Sc"		# remove all the cached packages that are not currently installed, and the unused sync database
alias paccc="sudo pacman -Scc"          # remove all files from the cache, use the clean switch twice, this is the most aggressive approach and will leave nothing in the cache folder
alias paclf="pacman -Ql"		# List all files installed by a given package
alias pacown="pacman -Qo"		# Show package(s) owning the specified file(s)
alias pacexpl="pacman -D --asexp"	# Mark one or more installed packages as explicitly installed 
alias pacimpl="pacman -D --asdep"	# Mark one or more installed packages as non explicitly installed
alias pacreport="sudo pacreport --unowned-files" # list all files not installed by pacman
alias packeys="sudo pacman-key --refresh-keys" # refresh pacman keys
alias yayup="yay -Syu" # upgrade system and any aur packages with yay
#alias pkgtop='pkgtop -pacman yay'       # have pkgtop use yay instead of pacman
alias paclog="grep -iE 'installed|upgraded' /var/log/pacman.log"
alias pacrevdep="pactree -rl" # show reverse dependencies of a package
alias pacinfo="pacman -Sii" # show information about a package including reverse dependencies(required by) # use pacman -Sii <pkg> | grep "Required By" to just show reverse deps  

# Additional pacman alias examples  see https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks for more
alias pacupd='sudo pacman -Sy && sudo abs'         # Update and refresh the local package and ABS databases against repositories
alias pacinsd='sudo pacman -S --asdeps'            # Install given package(s) as dependencies
alias pacmir='sudo pacman -Syy'                    # Force refresh of all package lists after updating /etc/pacman.d/mirrorlist
alias pacbrowse="pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'" # browse all installed packages with an instant preview of each package
alias pacbrowseall="pacman -Slq | fzf --preview 'pacman -Si {}' --layout=reverse" # browse all pkgs installed and not installed
alias pacdevel="pacman -Qq | grep -Ee '-(bzr|cvs|darcs|git|hg|svn)$'" # list all development/unstable packages
alias pecle="pacman -Qe" # List all explicitly installed packages
alias paclen="pacman -Qent" #List all explicitly installed native packages (i.e. present in the sync database) that are not direct or optional dependencies
alias pacfor="pacman -Qm" #List all foreign packages (typically manually downloaded and installed or packages removed from the repositories)
alias pacnat="pacman -Qn" #List all native packages (installed from the sync database(s))
alias reflect="sudo reflector --country 'United States' --age 12 --protocol https --sort rate --save /etc/pacman.d/mirrorlist"

# '[r]emove [o]rphans' - recursively remove ALL orphaned packages
alias pacro="/usr/bin/pacman -Qtdq > /dev/null && sudo /usr/bin/pacman -Rns \$(/usr/bin/pacman -Qtdq | sed -e ':a;N;\$!ba;s/\n/ /g')"

#=== find all pacnew and pacsave files $ find /etc -regextype posix-extended -regex ".+\.pac(new|save)" 2> /dev/null
alias pacnewsave="find /etc -regextype posix-extended -regex '.+\.pac(new|save)' 2> /dev/null"
alias pacdiff="sudo DIFFPROG=meld pacdiff"

#=== remove everything but base base-devel
alias killemall='sudo pacman -R $(comm -23 <(pacman -Qq | sort) <((for i in $(pacman -Qqg base base-devel); do pactree -ul "$i"; done) | sort -u))'

# dealing with the following message from pacman:
# 
#     error: couldnt lock database: file exists
#     if you are sure a package manager is not already running, you can remove /var/lib/pacman/db.lck

alias pacunlock="sudo rm /var/lib/pacman/db.lck"   # Delete the lock file /var/lib/pacman/db.lck
alias paclock="sudo touch /var/lib/pacman/db.lck"  # Create the lock file /var/lib/pacman/db.lck

#==== Recent Installed Packages
alias rip="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -200 | nl"
alias riplong="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -3000 | nl"
alias ripshort="expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 10"
alias big="expac -H M '%m\t%n' | sort -h | nl"

#==== show updated and installed packages
alias showup="grep upgraded /var/log/pacman.log"
alias showin="grep installed /var/log/pacman.log"
alias showoff="grep removed /var/log/pacman.log"
#alias showall="grep 'upgraded\|installed\|removed' /var/log/pacman.log"
alias showall="paclog --action=install --action=remove --action=upgrade"

#==== search aliases
alias pacfile="pacman -F" # search repo for package containing file

#==== rankmirrors
alias rankem="rankmirrors -v -n 5 /etc/pacman.d/mirrorlist" # get a list of the fastest mirrors for your location

#==== dinit aliases
#alias serv="sudo dinitctl list"

#==== openrc
alias serv="rc-update show" # show enabled services
alias servall="rc-update show -v" # show all services

#==== git home backup
alias config='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'

#==== for xorg
alias started="nano ~/.xinitrc"
alias startx="startx 2> ~/.xsession-errors"
alias killx="killall -u ron"
alias xpropall="sleep 5 && xwininfo -all -root" #==== get all open windows,etc properties

#==== for sway
alias swayprop="swaymsg -p -t get_tree | grep app_id"
alias swayxprop="swaymsg -p -t get_tree | grep class"
#alias sway="sway 2> ~/.sway.log"
alias sway="sway-run"
#alias swaypicker="grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:-"
alias swaypick="wl-color-picker"
alias layer="sleep 5 && swaymsg -r -t get_outputs | jq '.[0].layer_shell_surfaces | .[] | .namespace'"

#==== gnome wayland
#alias gnoway="XDG_SESSION_TYPE=wayland dbus-run-session gnome-session"
alias gnoway="/home/ron/.local/bin/gnome_start.sh"

#==== for hyprland
alias hypr="exec dbus-run-session hypr"

#==== misc aliases
alias clock="tty-clock -sSctB -C 6"
alias obxprop='xprop | grep "^_OB_APP"'
alias ls='ls --color=auto'
alias duhist="dunstctl history-pop"
alias scrot_th="scrot -t 20 -d 5 -c $HOME/Pictures/ScreenShots/`date +%Y-%m-%d_%H:%M:%S`.png"
alias wttr="curl wttr.in/Coleman?u"

#=== other aliases ===
alias update-grub="sudo grub-mkconfig -o /boot/grub/grub.cfg"
alias wioff="nmcli r wifi off"
alias wion="nmcli r wifi on"
#alias aurup="bb-wrapper -Syu --aur"
#alias aurin="bb-wrapper -S --aur"
alias aurup="yay -Syua"
#alias aurup="trizen -Syu"
#alias aurin="trizen -S --aur --devel"
#alias aurup="pacaur --aur-upgrade --devel --needed"
#alias aurin="pacaur --aur-sync"
alias nethogs="sudo nethogs wlo1"
alias nethogs-eth="sudo nethogs enp7s0"
alias iftop="sudo iftop -i wlo1"
alias iftop-eth="sudo iftop -i enp7s0"
alias sued="sudo -i nano"
alias open="echo exit | strace bash -li |& grep '^open'" #see what bash opens at login
alias blue="sudo dinitctl restart bluetooth"
alias icat="kitty +kitten icat"
alias brokesym="find / -xtype l -print"
alias dunstoff="killall -SIGUSR1 dunst"
alias dunston="killall -SIGUSR2 dunst"
alias GPU_TEMP=`inxi -s | grep "System" | awk {'print $8, $9, $10, $11, $12'}`
alias CPU_TEMP=`inxi -s | grep "System" | awk {'print $3, $4, $5'}`
alias env="printenv" # show environment variables
alias mpvart="mpv --x11-name=albumart" # ex mpv --x11-name=albumart /path/to/media

